#!/bin/bash
set -eu

CTX_NAME_PREFIX=revtrvp

function check_ip_not_on_host {
    local ip=$1
    while read -r pfx ; do
        if ./check-ip-in-subnet.py "$ip" "$pfx" ; then
            echo "WARNING: IP $ip is connected to the loopback on the host"
        fi
    done < <(ip addr show dev lo | grep -oEe "inet6? [^ ]+" | cut -d " " -f 2)
}

function start_containers {
    local idx=$1
    prefix=$(ip -4 addr show dev "pbr$idx" | grep -oEe "inet6? [^ ]+" | awk '{print $2;}')
    ip=$(ipcalc -n -b "$prefix" | grep HostMin | awk '{print $2;}')
    echo "Interface pbr$idx using $prefix"
    check_ip_not_on_host "$ip"
    local ctxname=$CTX_NAME_PREFIX-$idx
    echo "Starting revtrvp container $ctxname using IP $ip"
    docker run --name "$ctxname" --network="pbr$idx" --ip "$ip" --dns 8.8.8.8 \
            --restart=unless-stopped --detach \
            --log-opt max-size=1g --log-opt max-file=1 \
            revtrvp /server.crt /plvp.config -loglevel info
}

function stop_containers {
    local idx=$1
    ctxname=$CTX_NAME_PREFIX-$idx
    if docker ps | grep "$ctxname" &> /dev/null ; then
        echo "Stopping revtrvp container $ctxname"
        docker stop "$ctxname" &> /dev/null
        docker rm "$ctxname" &> /dev/null
    else
        echo "Container $ctxname not found, skipping"
    fi
}

die () {
    echo "$1"
    exit 1
}

if [[ $# -lt 2 ]] ; then die "usage: $0 <start|stop> <id>" ; fi
case $1 in
start)
    start_containers "$2"
    ;;
stop)
    stop_containers "$2"
    ;;
*)
    die "usage: $0 <start|stop> <id>"
    ;;
esac
